{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./js/classes/Dropdown.ts","./js/components/contact.ts"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","import uuid from \"uuid\";\nimport { Countriable } from \"../interfaces/countries\";\n\ninterface Attr {\n    name: string;\n    value: string;\n}\n\ninterface Elementable {\n    tag: string;\n    id: string;\n    class: string[];\n    parentElementId: string;\n    innerHtml?: string;\n    attributes?: Attr[];\n}\n\ninterface DropdownContructor {\n    arrayOfElements: Array<Countriable>;\n    defaultText: string;\n    appendTo: string;\n}\n\nexport default class Dropdown {\n    private optionButton!: Elementable;\n\n    private dropdown!: Elementable;\n\n    private selected!: Elementable;\n\n    private menuDropdown!: Elementable;\n\n    private dropdownOptions!: Elementable;\n\n    private createNewElement(element: Elementable): void {\n      const el = document.createElement(element.tag);\n      el.id = element.id;\n      element.class.map((i) => el.classList.add(i));\n      if (element.attributes) {\n        element.attributes.map((i) => el.setAttribute(i.name, i.value));\n      }\n      if (element.innerHtml) {\n        el.innerHTML = element.innerHtml;\n      }\n      const parent = document.getElementById(element.parentElementId);\n      parent.appendChild(el);\n    }\n\n    constructor(props: DropdownContructor) {\n      const id = uuid();\n      this.dropdown = {\n        tag: \"div\",\n        id: `dropdown-${id}`,\n        class: \"dropdown is-w-full\".split(\" \"),\n        parentElementId: props.appendTo,\n      };\n      this.optionButton = {\n        tag: \"button\",\n        id: `options-menu-${id}`,\n        class: \"button select cursor-pointer is-display-flex\".split(\" \"),\n        parentElementId: this.dropdown.id,\n        attributes: [\n          { name: \"aria-haspopup\", value: \"true\" },\n          { name: \"aria-expanded\", value: \"true\" },\n        ],\n      };\n\n      this.menuDropdown = {\n        tag: \"div\",\n        id: `menu-dropdown-${id}`,\n        class: \"dropdown-leave menu-dropdown\".split(\" \"),\n        parentElementId: this.dropdown.id,\n      };\n      this.selected = {\n        tag: \"span\",\n        id: `current-dropdown-${id}`,\n        class: \"button-span\".split(\" \"),\n        parentElementId: this.optionButton.id,\n        innerHtml: props.defaultText,\n      };\n      this.dropdownOptions = {\n        tag: \"div\",\n        id: `dropdown-options-${id}`,\n        class: [\"is-flex-column\"],\n        parentElementId: this.menuDropdown.id,\n        attributes: [\n          { name: \"role\", value: \"menu\" },\n          { name: \"aria-orientation\", value: \"vertical\" },\n          { name: \"aria-labelledby\", value: `options-menu-${id}` },\n        ],\n      };\n\n      Object.keys(this).map((i) => this.createNewElement(this[i]));\n      props.arrayOfElements.map((i) => {\n        const elem: Elementable = {\n          tag: \"button\",\n          id: `dropdown-element-${id}`,\n          class: [\"option-dropdown\", \"select\"],\n          parentElementId: this.dropdownOptions.id,\n          attributes: [{ name: \"value\", value: i.country }],\n          innerHtml: i.country,\n        };\n        this.createNewElement(elem);\n      });\n\n      this.listenOptions();\n      this.listenButton();\n      this.clickOutsideListen();\n    }\n\n    private listenOptions(): void {\n      const options = document.getElementsByClassName(\"option-dropdown\");\n      const menu = document.getElementById(this.menuDropdown.id);\n      for (const option of options) {\n        option.addEventListener(\"click\", (e) => {\n          const selected = document.getElementById(this.selected.id);\n          selected.innerHTML = (e.target as HTMLButtonElement).value;\n\n          for (const option of options) {\n            if ((option as HTMLInputElement).innerText === selected.innerText) {\n              option.classList.add(\"dropdown-selected\");\n            } else {\n              option.classList.remove(\"dropdown-selected\");\n            }\n          }\n\n          menu.classList.add(\"dropdown-leave\");\n          menu.classList.remove(\"dropdown-enter\");\n        });\n      }\n    }\n\n    private listenButton(): void {\n      const optionButton = document.getElementById(this.optionButton.id);\n      optionButton.addEventListener(\"click\", () => {\n        const menu = document.getElementById(this.menuDropdown.id);\n        if (menu.classList.contains(\"dropdown-leave\")) {\n          menu.classList.remove(\"dropdown-leave\");\n          menu.classList.add(\"dropdown-enter\");\n        } else {\n          menu.classList.add(\"dropdown-leave\");\n          menu.classList.remove(\"dropdown-enter\");\n        }\n      });\n    }\n\n    private clickOutsideListen(): void {\n      document.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const dropdown = document.getElementById(this.dropdown.id);\n        const isClickInside = dropdown.contains((e as any).target);\n        const menu = document.getElementById(this.menuDropdown.id);\n        if (!isClickInside && menu.classList.contains(\"dropdown-enter\")) {\n          menu.classList.add(\"dropdown-leave\");\n          menu.classList.remove(\"dropdown-enter\");\n        }\n      });\n    }\n}\n","import FormData  from \"../classes/FormData\";\nimport { api } from \"../api/api\";\nimport Dropdown from \"../classes/Dropdown\";\nimport { Countriable } from \"../interfaces/countries\";\n\n\"use strict\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const formData = new FormData();\n\n  const initForm = () => {\n    const injured = Object.values(formData.injuredFromAttack);\n    for (let i = 0; i < injured.length; i += 1) {\n      (document.getElementsByClassName(\"checkbox\")[i] as HTMLInputElement).checked = injured[i];\n    }\n    Object.keys(formData.type).map((item, index) => (document.getElementsByClassName(\"form-radio-type\")[index] as HTMLInputElement).checked = formData.type[item]);\n    Object.keys(formData.amountOfInjures).map((item, index) => (document.getElementsByClassName(\"form-radio-amount\")[index] as HTMLInputElement).checked = formData.amountOfInjures[item]);\n\n    Object.keys(formData).map((item, key) => {\n      if (key < 3) {\n        (document.getElementById(`form-${item}`) as HTMLInputElement).value = formData[item];\n      }\n    });\n    (document.getElementById(\"form-description\") as HTMLInputElement).value = formData.description;\n  };\n\n  const listenDomMultiselectCollection = (element, formObject, listener = \"input\", inputClass, isRadio = false) => {\n    const domObject = document.getElementsByClassName(element);\n\n    for (let i = 0; i < domObject.length; i++) {\n      domObject[i].addEventListener(listener, () => {\n        if (isRadio) {\n          Object.keys(formObject).map((i) => {\n            formObject[i] = false;\n          });\n        }\n        const key = Object.keys(formObject).find((_, ind) => ind === i);\n        formObject[key] = !formObject[key];\n        const el = <HTMLInputElement>domObject[i].getElementsByClassName(inputClass)[0];\n        if ((el.checked) !== undefined) {\n          el.checked = formObject[key];\n        } else {\n          console.error(\"Selection error: This element doesn't have input with checked attribute\");\n        }\n      }, true);\n    }\n  };\n\n  const listenDomElement = (elementName, formObject) => {\n    const domObject = document.getElementById(elementName);\n    domObject.addEventListener(\"input\", (e) => {\n      formData[formObject] = (e.target as HTMLInputElement).value;\n    });\n  };\n\n  const sendForm = () => {\n    const button = document.getElementById(\"send-compliant\");\n    button.addEventListener(\"click\", async () => {\n      await api.sendReport(formData);\n      localStorage.setItem(\"formItem\", JSON.stringify(formData));\n      window.location.href = (\"./redirected.html\");\n    });\n  };\n\n  const resetForm = () => {\n    const reset = document.getElementById(\"reset-form\");\n    reset.addEventListener(\"click\", () => {\n      console.log(\"reset form\");\n      formData.resetForm();\n      initForm();\n    });\n  };\n\n  initForm();\n  listenDomMultiselectCollection(\"cb-container\", formData.injuredFromAttack, \"click\", \"checkbox\");\n  listenDomMultiselectCollection(\"form-radio-type-wrapper\", formData.type, \"click\", \"form-radio-type\", true);\n  listenDomMultiselectCollection(\"form-radio-amount-wrapper\", formData.amountOfInjures, \"click\", \"form-radio-amount\", true);\n\n  Object.keys(formData).map((item, key) => {\n    if (key < 3) {\n      listenDomElement(`form-${item}`, item);\n    }\n    return item;\n  });\n  listenDomElement(\"form-description\", \"description\");\n\n  const createDropdown = (async () => {\n    const dropdownContent: Countriable[] = await api.loadCountries();\n    const props = {\n      arrayOfElements: dropdownContent,\n      defaultText: \"Select your region\",\n      appendTo: \"dropdown-section\",\n    };\n    // eslint-disable-next-line no-unused-vars\n    const drop = new Dropdown(props);\n  });\n\n  createDropdown();\n  sendForm();\n  resetForm();\n});\n"],"names":["a","globalThis","self","window","global","__esModule","default","$21495fb97bd67fe9f19fa5f71fad6a93$export$default","createNewElement","element","el","document","createElement","tag","id","class","map","i","classList","add","attributes","setAttribute","name","value","innerHtml","innerHTML","getElementById","parentElementId","appendChild","constructor","props","this","dropdown","split","appendTo","optionButton","menuDropdown","selected","defaultText","dropdownOptions","Object","keys","arrayOfElements","elem","country","listenOptions","listenButton","clickOutsideListen","options","getElementsByClassName","menu","option","addEventListener","e","target","innerText","remove","contains","preventDefault","isClickInside","formData","initForm","injured","values","injuredFromAttack","length","checked","type","item","index","amountOfInjures","key","description","listenDomMultiselectCollection","formObject","listener","inputClass","isRadio","domObject","find","_","ind","undefined","console","error","listenDomElement","elementName","async","dropdownContent","$5090210c0f9a515e9579e8c82f66b724$init","api","loadCountries","drop","createDropdown","sendReport","localStorage","setItem","JSON","stringify","location","href","log","resetForm"],"version":3,"file":"contact.32327d8d.js.map"}